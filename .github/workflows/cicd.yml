name: cicd

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install bun
        uses: oven-sh/setup-bun@v2

      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: v1-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            v1-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - run: bun run lint

  test:
    runs-on: ubuntu-latest

    env:
      BUN_ENV: test
      NODE_ENV: test
      SUPABASE_DB_URL: postgresql://postgres:postgres@localhost:5432/postgres

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Install bun
        uses: oven-sh/setup-bun@v2

      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: v1-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            v1-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - run: bun drizzle-kit push

      - run: bun run test
        env:
          # test-only values - not real
          GCM_API_KEY: testing
          VAPID_PUBLIC_KEY: BG8ZcH_p5zNxqiEMm91gvMJM9dXmjU4HZvXEXTB_WdW7sTYtYZaQmTAe5Fgkr9g2xQaBbImVbbGGtfcNXf5qavo
          VAPID_PRIVATE_KEY: YolBfgji-xWh7PMDaY3EZAkmx-KNCXjXv1lbHbZHlw8

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install bun
        uses: oven-sh/setup-bun@v2

      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: v1-bun-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            v1-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - run: bun run typecheck

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value={{sha}}
            type=raw,value=latest

      - name: Login to GHCR
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and maybe Push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
