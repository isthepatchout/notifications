name: cicd

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - run: node --run lint

  test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres?sslmode=disable

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: orioledb/orioledb:latest-pg17
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - uses: ariga/setup-atlas@4240bd74ba9f13319a21de2b6e497f2b6d184d76
        with:
          version: v0.33.1

      - run: atlas migrate apply --url $DATABASE_URL

      - run: node --test src/**/*.test.ts
        env:
          # test-only values - not real
          GCM_API_KEY: testing
          VAPID_PUBLIC_KEY: BG8ZcH_p5zNxqiEMm91gvMJM9dXmjU4HZvXEXTB_WdW7sTYtYZaQmTAe5Fgkr9g2xQaBbImVbbGGtfcNXf5qavo
          VAPID_PRIVATE_KEY: YolBfgji-xWh7PMDaY3EZAkmx-KNCXjXv1lbHbZHlw8

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - run: node --run typecheck

  build:
    needs: [lint, test, typecheck]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value={{sha}}
            type=raw,value=latest

      - name: Login to GHCR
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and maybe Push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
